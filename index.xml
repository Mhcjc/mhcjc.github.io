<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Objectman</title>
    <link>https://mhcjc.github.io/</link>
    <description>Recent content on Objectman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Nov 2019 16:39:44 +0800</lastBuildDate>
    
	<atom:link href="https://mhcjc.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ECIT数据结构复习指北</title>
      <link>https://mhcjc.github.io/ecit%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E6%8C%87%E5%8C%97/</link>
      <pubDate>Sat, 30 Nov 2019 16:39:44 +0800</pubDate>
      
      <guid>https://mhcjc.github.io/ecit%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E6%8C%87%E5%8C%97/</guid>
      <description>ECIT数据结构复习指北 ​	纯属娱乐，如果发现问题联系2024099381
数据结构的概念： ​	自行百度。
线性表的线性储存结构： 考点   线性表的插入： ① 将线性表的第i个数据元素到第n个元素之间的所有元素一次向后移动一个位置
②将元素item插入第i个位置
③修改表长为n+1
注意移动的顺序，千万得从后面的开始移动不然会覆盖前面的元素。 arr[j] = arr[j+1];
算法：
void INSERTLIST(int A[], int &amp;amp;n, int i, int t) /*注意n的引用是为了标记数组元素个数，i为插入的位置，t为插入元素*/ { int j; if(n == MaxSize || i&amp;lt;1 || i&amp;gt;n+1)	//判断数组是否已满， 以及i是否符合数组的大小  { cout&amp;lt;&amp;lt; &amp;#34;数组已满或插入位置不正确&amp;#34;&amp;lt;&amp;lt;endl; exit(0); } for(j = n-1; j&amp;gt;= i-1; j--) A[j+1] = A[j]; A[i-1] = t; n++; }   线性表的删除： 与上面类似
不过须要注意的是可以直接用后面的元素覆盖前面的元素就可以了 arr[i] = arr[i+1]</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mhcjc.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%AC%AC%E4%B8%83%E7%89%88-%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mhcjc.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%AC%AC%E4%B8%83%E7%89%88-%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>计算机网络 （第七版） 重点总结 第一章 概述 1.1 计算机网络在信息时代的作用  互联网的两个重要基本特点连通性和共享  1.2 互联网概述  计算机网络（简称为网络）** 有若干个**结点**和连接这些的**链路**组成 以小写字母i开始的**internet（互连网）**是一个通用名词，它泛指由多个计算机网络互连而形成的计算机网络 以大写字母i开始的Internet（互联网，或因特网）则是一个专用名词，它指当前全球最大的，开放的，由众多王若相互连接而成的特定互联网，它采用TCP/IP协议作为通信的规则，且其前身是美国的ARPANET 互联网服务提供者ISP  1.3 互联网的组成   边缘部分：由所有连接在互联网上的主机组成。这部分是用户直接使用的，用来进行通信（传输数据、音频或视频）和资源共享
  核心部分： 由大量网络和连接这些互联网的路由器组成。这部分是为边缘部分提供服务的（停工连通性和交换）。
  网络边缘的端系统之间的通信方式通常可划分为两大类：客户-服务器方式（C/S方式）和对等方式（P2P方式）。
  路由器是实现分组交换（packet switching）的关键构件，其任务是转发收到的分组，这是网络核心部分最重要的功能。
  电路交换&amp;mdash;&amp;ndash;整个报文的比特流连续的从源点直达终点，好像在一个管道中传送。
  报文交换&amp;mdash;&amp;ndash;整个报文先传送到相邻的系结点，全部存储下来后查找转发表，转发到下一个结点
  分组交换&amp;mdash;&amp;ndash;单个分组（这只是整个报文的一部分））传送到相邻的结点，存储下来后查找转发表，转发到下一个结点。
  1.5 计算机网络的类别   按照网络的作用范围进行分类
  广域网WAN
  城域网MAN
  局域网LAN
  个人区域网PAN
若中央处理机之间的距离非常近（小于1米的数量级），则一般称为多处理机系统而不称为计算机网络
    1.6 计算机网络的性能  计算机的性能指标  速率 带宽 吞吐量 时延  发送时延 传播时延 处理时延 排队时延   时延宽带积 往返时间RTT 利用率   计算机网络的非性能特征  费用 质量 标准化 可靠性 可扩展性和可升级性 易于管理和维护   开放系统互连的基本参考模型OSI/RM（Open Systems Interconnection Reference Model） 这些为进行网络中的数据交换而建立的规则，标准或约定称为网络协议（network protocol）。可简称协议  协议主要由以下三个要素组成：  语法：即数据与控制信息的结构或格式。 语义：即需要发出何种控制信息，完成何种动作以及做出何种相应。 同步：即时间实现顺序的详细说明。     计算机网络体系结构协议对比图 P31  OSI七层协议 TCP/IP的四层协议 五层协议   在物理层上所传输的数据单位是比特。 数据协议单元PDU（Protocol Data Unit）  习题  1-03	1-07	1-12	1-13	1-17	1-18	1-22	1-28  第二章 物理层 2.</description>
    </item>
    
  </channel>
</rss>